{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Tugas 1 Statistika Deskriptif \u00b6 Statistika Deskriptif adalah metode yang digunakan untuk menganalisis sebuah data sehingga dapat memberikan informasi yang dapat berguna. Contoh statistika deskriptif yakni tabel, grafik, diagram, piktogram. 1.Rata-rata (mean) Rata-rata adalah nilai yang menentukan pada kisaran angka berapa pada suatu data. Cara menghitung rata-rata yakni menjumlahkan seluruh nilai dari masing-masing data, kemudian dibagi dengan banyaknya data yang ada. 2.Median (median) Median adalah nilai tengah dari kumpulan data yang telah diurutkan dari yang terkecil sampai terbesar, apabila jumlah data adalah ganjil maka nilai median yakni suatu nilai yang berada di tengah urutan, namun apabila jumlah data genap maka mediannya adalah hasil penjumlahan dua nilai yang berada di tengah urutan data kemudian hasilnya dibagi dua. 3.Modus (mode) Nilai atau data yang paling sering muncul atau memiliki jumlah frekuensi yang paling banyak. Untuk data numerik unimodal yang cukup miring (asimetris), kami memiliki hubungan empiris: mean \u2212 mode \u2248 3 \u00d7 (mean \u2212 median) Ini menyiratkan bahwa mode untuk kurva frekuensi unimodal yang cukup miring dapat dengan mudah didekati jika nilai rata-rata dan median diketahui. 4.Standard Deviasi Adalah nilai statistika yang dimanfaatkan untuk menentukan bagaimana sebaran data dalam sampel yang merupakan akar kuadrat dari varians, serta seberapa dekat titik data individu ke rata-rata nilai sampel. Rumus yang digunakan: $$ \\begin{align }s = \\sqrt{\\frac{n\\sum_{i=1}nx_i2-(\\sum_{i=1}^nx_1)2}{n(n-1)}}\\end{align } $$ 5.Varian Varian adalah ukuran yang digunakan untuk mengetahui seberapa jauh sebuah kumpulan bilangan tersebar. 6.Skewness Suatu nilai yang menunjukkan seberapa jauh pergeseran dari bentuk simetris suatu distribusi atau sering disebut derajat ketidaksimetrisan. Untuk menghitung derajat distorisi dapat menggunakan koefisien Kemencengan Pearson yang diperoleh dengan menggunakan nilai selisih rata-rata dengan modus dibagi simpangan baku. 7.Quartil Adalah nilai-nilai yang membagi data yang sudah diurutkan ke dalam 4 bagian yang nilainya sama besar. Dalam menentukan letak kuartil data tunggal, kita harus melihat kondisi jumlah data (n) terlebih dahulu. Kuartil pada suatu data dapat diperoleh dengan cara membagi data tersebut secara terurut menjadi empat bagian yang memiliki nilai sama besar. Data yang sudah diolah berdasarkan Statistika Deskriptif \u00b6 import pandas as pd from scipy import stats import numpy as np import seaborn as sns import matplotlib as plt data = pd.read_csv(\"tugas gita.csv\",delimiter=\";\") cm = sns.light_palette(\"gold\", as_cmap=True) data.style.background_gradient(cmap=cm) colum = data.columns.tolist() for x in colum : ds = [x for x in data[x]] desc = data[x].describe() array = [x for x in desc] print(\"Detail kolom\",x) print(\"rata-rata: \",array[1]) print(\"Median: \",np.median(np.array(ds))) print(\"Modus: \",stats.mode(ds)) print(\"Standard deviasi: \",np.std(ds)) print(\"varian: \",stats.variation(ds)) print(\"Skewness: \",stats.skew(ds)) print(\"Quartil 1: \",array[4]) print(\"Quartil 2: \",array[5]) print(\"Quartil 3: \",array[6]) sns.distplot(data[x]) print(\"\\n\") Hasil runningnya: \u00b6 Detail kolom Data 1 rata-rata: 31.028 Median: 31.0 Modus: ModeResult(mode=array([10]), count=array([16])) Standard deviasi: 17.637097720430084 varian: 0.5684252198153308 Skewness: 0.04037865369912075 Quartil 1: 15.75 Quartil 2: 31.0 Quartil 3: 47.0 Detail kolom Data 2 rata-rata: 29.77 Median: 29.0 Modus: ModeResult(mode=array([31]), count=array([15])) Standard deviasi: 17.553492529978186 varian: 0.5896369677520386 Skewness: 0.08681623088885974 Quartil 1: 14.0 Quartil 2: 29.0 Quartil 3: 45.0 Detail kolom Data 3 rata-rata: 30.194 Median: 30.0 Modus: ModeResult(mode=array([7]), count=array([18])) Standard deviasi: 17.520740966066477 varian: 0.5802722715130979 Skewness: -0.009515290333714116 Quartil 1: 15.0 Quartil 2: 30.0 Quartil 3: 46.0 Detail kolom Data 4 rata-rata: 30.704 Median: 32.0 Modus: ModeResult(mode=array([52]), count=array([15])) Standard deviasi: 17.773924271246347 varian: 0.5788797639150061 Skewness: -0.03918001057467828 Quartil 1: 16.0 Quartil 2: 32.0 Quartil 3: 46.0 Mengukur Jarak Data Mengukur Jarak Data \u00b6 1. Mengukur Jarak Atribut Numerik \u00b6 Saat ini database memiliki banyak tipe data, dimana mengukur jarak merupakan komponen utama dalam algoritma clustering berbasis jarak, seperti Algoritma Partisioning misalnya fuzzy c-mean, K-Mean, rough clustering, dan K-medoidm bergantung pada jarak untuk melakukan pengelompokkan. Dimisalkan terdapat dua vektor yang kita singkat dengan v1 dan v2. v1 = x1,x2,...,x_n, v2 = y1,y2,...,y_n, dimana x_i,y_i disebut atribut. Terdapat beberapa ukuran jarak atau biasa disebut similaritas, yakni diantaranya: Minkowski Distance \u00b6 Minkowski Distance adalah sebuah metrik dalam ruang vektor dimana suatu norma didefinisikan (normed vector space) sekaligus dianggap sebagai generalisasi dari Euclidean distance dan Manhattan distance. Euclidean distance Euclidean distance merupakan metode perhitungan jarak yang digunakan untuk mengukur jarak dari dua buah titik dalam Euclidean space yakni meliputi bidang euclidean dua dimensi, tiga dimensi, atau bahkan lebih. Average Distance Average distance digunakan untuk menghitung jarak rata-rata antara data yang terletak pada cluster sama berdasarkan clustering dataset dan clustering dataset dengan penghapusan satu kolom (variabel). Berikut merupakan rumus dengan metode ini: dave=(1nn\u2211i=1(xi\u2212yi)2)12dave=(1n\u2211i=1n(xi\u2212yi)2)12 Keterangan: d = jarak antara x dan y x = data pusat klaster y = data pada atribut i = setiap data n = jumlah data, xi = data pada pusat klaster ke i yi = data pada setiap data ke i ###### Weighted euclidean distance Weighted Euclidean distance merupakan modifikisasi lain dari jarak Euclidean distance yang dapat digunakan. Rumus yang digunakan adalah sebagai berikut: dwe=(n\u2211i=1wi(xi\u2212yi)12)2dwe=(\u2211i=1nwi(xi\u2212yi)12)2 wi adalah bobot yang diberikan pada atribut ke-i ###### Chord distance Chord distance adalah salah satu ukuran jarak modifikasi Euclidean distance untuk mengatasi kekurangannya sehingga skala yang digunakan lebih baik dari Euclidean distance. Rumus yang digunakan yakni: dchord=(2\u22122\u2211ni=1xiyi||x||2||y||2)12dchord=(2\u22122\u2211i=1nxiyi||x||2||y||2)12 ###### Mahalanobis distance* Mahalanobis merupakan jarak yang teratur dapat digunakan untuk mengekstraksi hyperellipsoidal clusters, sehingga dapat mengurangi distorsi yang disebabkan oleh kolerasi linier antara fitur dengan cara transformasi pemutihan ke data atau menggunakan kuadrat jarak mahalanobis. Rumus yang digunakan yaitu: dmah=\u221a(x\u2212y)S\u22121(x\u2212y)Tdmah=(x\u2212y)S\u22121(x\u2212y)T Ket : S adalah matrik covariance data ###### Cosine measure Cosine similarity adalah sebuah metode untuk menghitung kesamaan antara dua buah objek yang dinyatakan dalam dua buah vector dengan menggunakan kata kunci dari sebuah dokumen sebagai ukuran. Ukuran dari cosine similarity ini lebih banyak digunakan dalam similaritas dokumen. Rumus yang digunakan adalah: Cosine(x,y)=\u2211ni=1xiyi||x||2||y||2Cosine(x,y)=\u2211i=1nxiyi||x||2||y||2 Ket : \u2225y\u22252 merupakan Euclidean norm dari vektor y=(y1,y2,\u2026,yn)y=(y1,y2,\u2026,yn) didefinisikan dengan \u2225y\u22252=\u221ay21+y22+\u2026+y2n ###### Pearson correlation Kolerasi Pearson adalah ukuran kolerasi yang digunakan untuk mengukur kekuatan dan arah hubungan linier dari dua variabel. Dikatakan berkolerasi apabila terjadi perubahan salah satu variabel disertai dengan perubahan variabel lainnya, baik dalam arah yang sama ataupun arah yang sebaliknya. Pearson correlation banyak digunakan dalam data expresi gen. Dimana ukuran ini menghitung similaritas antara dua bentuk pola expresi gen. Akan tetapi metode ini memiliki kelemahan yaitu sensitif terhadap outlier. Rumus yang digunakan yakni: Pearson(x,y)=\u2211ni=1(xi\u2212\u03bcx)(yi\u2212\u03bcy)\u221a\u2211ni=1(xi\u2212yi)2\u221a\u2211ni=1(xi\u2212yi)2Pearson(x,y)=\u2211i=1n(xi\u2212\u03bcx)(yi\u2212\u03bcy)\u2211i=1n(xi\u2212yi)2\u2211i=1n(xi\u2212yi)2 2. MENGUKUR JARAK ATRIBUT BINARY \u00b6 Atribut biner hanya memiliki dua kategori atau keadaan yakni 0 dan 1, dimana 0 berarti tidak ada dan 1 berarti ada. Atribut biner bisa simetris atau asimetris, dikatakan simetris jika kedua nilainya bernilai sama atau setimbang harganya, sehingga tidak bisa diberi kode 0 atau 1, sedangkan asimetris kedua nilainya tidak setimbang harganya sehingga dapat diberi kode 0 atau 1. Contoh atribut biner yaitu status kehidupan, yakni hidup dan meninggal. 1 menunjukkan orang itu hidup dan 0 menunjukkan orang itu meninggal. Atribut biner tidak boleh diperlakukan sama dengan atribut numerik, sehingga ada metode khusus untuk membedakan komputasi pada data biner. Jadi untuk menghitung ketidaksamaan antara dua atribut biner yakni dengan melibatkan penghitungan matriks ketidaksamaan dari data biner. Jika semua atribut biner dianggap memiliki bobot yang sama, kita memiliki tabel kontingensi 2\u00d72 di mana q adalah jumlah atribut yang sama dengan 1 untuk kedua objek i dan j, r adalah jumlah atribut yang sama dengan 1 untuk objek i tetapi 0 untuk objek j, s adalah jumlah atribut yang sama dengan 0 untuk objek i tetapi 1 untuk objek j, dan t adalah jumlah atribut yang sama dengan 0 untuk kedua objek ii dan j. Jumlah total atribut adalah p, dimana p=q+r+s+tp=q+r+s+t Untuk atribut biner simetris, masing-masing nilai bobot yang sama. Jika objek i dan j dinyatakan sebagai atribut biner simetris, maka dissimilarity antara i dan j adalah d(i,j)=r+sq+r+s+td(i,j)=r+sq+r+s+t Untuk atribut biner asimetris, kedua kondisi tersebut tidak sama pentingnya, seperti hasil positif 1 dan negatif 0 dari tes penyakit. Dimana 1 (positif) dianggap lebih signifikan, sehingga kecocokan 0 negatif diabaikan. Atribut biner ini disebut asimetris biner dissimilarity, rumusnya yakni: d(i,j)=r+sq+r+sd(i,j)=r+sq+r+s Untuk pengukuran dua atribut biner berdasarkan pada disimilarity. Misalnya, biner asimetris kesamaan antara objek i dan j, dihitung dengan rumus: sim(i,j)=qq+r+s=1\u2212d(i,j)sim(i,j)=qq+r+s=1\u2212d(i,j) 3. MENGUKUR JARAK ATRIBUT CATEGORICAL \u00b6 Overlay Metric \u00b6 Apabila semua atribut adalah bertipe nominal, ukuran jarak yang paling sederhana adalah dengan Overlay Metric, rumusnya yaitu: d(x,y)=n\u2211i=1\u03b4(ai(x),ai(y))d(x,y)=\u2211i=1n\u03b4(ai(x),ai(y)) Keterangan: n = banyaknya atribut ai(x) dan ai(y) = nilai atribut ke i Jika hasilnya = 0 maka ai(x)=ai(y), dan 1 jika sebaliknya Value Difference Metric (VDM) \u00b6 VDM dikenalkan oleh Standfill and Waltz, rumusnya yaitu: d(x,y)=n\u2211i=1C\u2211c=1|P(c|ai(x))\u2212P(c|ai(y)d(x,y)=\u2211i=1n\u2211c=1C|P(c|ai(x))\u2212P(c|ai(y) Keterangan : C = banyaknya kelas P(c|ai(x))P(c|ai(x)) adalah probabilitas bersyarat dimana kelas x adalah c dari atribut Ai yang memiliki nilai ai(x) P(c|ai(y))P(c|ai(y)) adalah probabilitas bersyarat dimana kelas y adalah c dengan atribut Ai memiliki nilai ai(y) Pendekatan lain berbasi probabilitas adalah SFM (Short and Fukunaga Metric) yang kemudian dikembangkan oleh Myles dan Hand dan didefinisikan dengan d(x,y)=C\u2211c=1|P(c|x)\u2212P(c|y)|d(x,y)=\u2211c=1C|P(c|x)\u2212P(c|y)| Minimum Risk Metric (MRM) \u00b6 Ukuran ini dipresentasikan oleh Blanzieri and Ricci, dimana MRM meminimumkan risk of misclassification yang didefinisikan dengan d(x,y)=C\u2211c=1P(c|x)(1\u2212P(c|y))d(x,y)=\u2211c=1CP(c|x)(1\u2212P(c|y)) 4. MENGUKUR JARAK ATRIBUT ORDINAL \u00b6 Atribut Ordinal adalah atribut dengan nilai-nilai yang memiliki urutan atau peringkat, akan tetapi jarak antara nilai-nilainya tidak diketahui. Contohnya: nilai ujian(A,B,C,D,E), rangking kelas(1,2,3), ukuran baju(S,M,L,XL,XXL), dan sebagainya. Perlakuan untuk atribut ordinal adalah cukup sama dengan atribut numerik ketika menghitung disimilarity antara objek. Misalkan f adalah atribut-atribut dari atribut ordinal dari n objek. Menghitung disimilarity terhadap f fitur sebagai berikut: Nilai f untuk objek ke-ii adalah xif, dan f memiliki Mf status urutan , mewakili peringkat 1,..,Mf1,..,Mf Ganti setiap xif dengan peringkatnya, rif\u2208{1...Mf} Karena setiap atribut ordinal dapat memiliki jumlah state yang berbeda, diperlukan untuk memetakan rentang setiap atribut ke [0,0, 1.0] sehingga setiap atribut memiliki bobot yang sama. Perl melakukan normalisasi data dengan mengganti peringkat rifrif dengan: zif=rif\u22121Mf\u22121zif=rif\u22121Mf\u22121 Dissimilarity kemudian dihitung dengan menggunakan ukuran jarak seperti atribut numerik dengan data yang baru setelah ditransformasi $ z _ { i f }$ 5. MENGHITUNG JARAK TIPE CAMPURAN \u00b6 *Code Program untuk Implementasikan \u00b6 import pandas as pd from scipy import stats import numpy as np import seaborn as sns import matplotlib.pyplot as plt data = pd.read_csv(\"Data.csv\",delimiter=\";\") k=data.iloc[0:18] k Hasil outputnya : Sex Length Diameter Height Whole weight Shucked weight Viscera weight Shell weight Rings 0 M 0.455 0.365 0.095 0.5160 0.2245 0.1010 0.150 15 1 M 0.350 0.265 0.090 0.2255 0.0995 0.0485 0.070 7 2 F 0.530 0.420 0.135 0.6770 0.2565 0.1415 0.210 9 3 M 0.440 0.365 0.125 0.5160 0.2155 0.1140 0.155 10 4 I 0.330 0.255 0.080 0.2050 0.0895 0.0395 0.055 7 5 I 0.425 0.300 0.095 0.3515 0.1410 0.0775 0.120 8 6 F 0.530 0.415 0.150 0.7775 0.2370 0.1415 0.330 20 7 F 0.545 0.425 0.125 0.7680 0.2940 0.1495 0.260 16 8 M 0.475 0.370 0.125 0.5095 0.2165 0.1125 0.165 9 9 F 0.550 0.440 0.150 0.8945 0.3145 0.1510 0.320 19 10 F 0.525 0.380 0.140 0.6065 0.1940 0.1475 0.210 14 11 M 0.430 0.350 0.110 0.4060 0.1675 0.0810 0.135 10 12 M 0.490 0.380 0.135 0.5415 0.2175 0.0950 0.190 11 13 F 0.535 0.405 0.145 0.6845 0.2725 0.1710 0.205 10 14 F 0.470 0.355 0.100 0.4755 0.1675 0.0805 0.185 10 15 M 0.500 0.400 0.130 0.6645 0.2580 0.1330 0.240 12 16 I 0.355 0.280 0.085 0.2905 0.0950 0.0395 0.115 7 17 F 0.440 0.340 0.100 0.4510 0.1880 0.0870 0.130 10 numerical=[8] ordinal=[1,7] from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[0]+[0]+[0]+[0], [\"v1-v3\"]+[0]+[0]+[0]+[0]+[0], [\"v2-v3\"]+[0]+[0]+[0]+[0]+[0], [\"v3-v4\"]+[0]+[0]+[0]+[0]+[0], [\"v4-v5\"]+[0]+[0]+[0]+[0]+[0], [\"v5-v6\"]+[0]+[0]+[0]+[0]+[0] ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Hasil outputnya : Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 0 0 0 0 v1-v3 0 0 0 0 0 v2-v3 0 0 0 0 0 v3-v4 0 0 0 0 0 v4-v5 0 0 0 0 0 v5-v6 0 0 0 0 0 #JARAK NUMERIK \u00b6 def chordDist(v1,v2,jnis): jmlh=0 normv1=0 normv2=0 for x in range (len(jnis)): normv1=normv1+(int(k.values.tolist()[v1][jnis[x]])**2) normv2=normv2+(int(k.values.tolist()[v1][jnis[x]])**2) jmlh=jmlh+(int(k.values.tolist()[v1][jnis[x]])*int(k.values.tolist()[v2][jnis[x]])) return ((2-(2*jmlh/((normv1**0.5)*(normv2**0.5)))**0.5)) from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[\"{:.2f}\".format(chordDist(0,1,numerical))]+[0]+[0]+[0], [\"v1-v3\"]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[0]+[0]+[0], [\"v2-v3\"]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[0]+[0]+[0], [\"v3-v4\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[0]+[0]+[0], [\"v4-v5\"]+[0]+[\"{:.2f}\".format(chordDist(3,4,numerical))]+[0]+[0]+[0], [\"v5-v6\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[0]+[0]+[0], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Hasil outputnya : Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 1.03 0 0 0 v1-v3 0 0.90 0 0 0 v2-v3 0 0.40 0 0 0 v3-v4 0 0.51 0 0 0 v4-v5 0 0.82 0 0 0 v5-v6 0 0.51 0 0 0 Specimen \u00b6 Body copy \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras arcu libero, mollis sed massa vel, ornare viverra ex . Mauris a ullamcorper lacus. Nullam urna elit, malesuada eget finibus ut, ullamcorper ac tortor. Vestibulum sodales pulvinar nisl, pharetra aliquet est. Quisque volutpat erat ac nisi accumsan tempor. Sed suscipit , orci non pretium pretium, quam mi gravida metus, vel venenatis justo est condimentum diam. Maecenas non ornare justo. Nam a ipsum eros. Nulla aliquam orci sit amet nisl posuere malesuada. Proin aliquet nulla velit, quis ultricies orci feugiat et. Ut tincidunt sollicitudin tincidunt. Aenean ullamcorper sit amet nulla at interdum. Headings \u00b6 The 3rd level \u00b6 The 4th level \u00b6 THE 5TH LEVEL \u00b6 The 6th level \u00b6 Headings with secondary text \u00b6 The 3rd level with secondary text \u00b6 The 4th level with secondary text \u00b6 THE 5TH LEVEL WITH SECONDARY TEXT \u00b6 The 6th level with secondary text \u00b6 Blockquotes \u00b6 Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Sed molestie imperdiet consectetur. Blockquote nesting \u00b6 Sed aliquet , neque at rutrum mollis, neque nisi tincidunt nibh, vitae faucibus lacus nunc at lacus. Nunc scelerisque, quam id cursus sodales, lorem libero fermentum urna, ut efficitur elit ligula et nunc. Mauris dictum mi lacus, sit amet pellentesque urna vehicula fringilla. Ut sit amet placerat ante. Proin sed elementum nulla. Nunc vitae sem odio. Suspendisse ac eros arcu. Vivamus orci erat, volutpat a tempor et, rutrum. eu odio. Suspendisse rutrum facilisis risus , eu posuere neque commodo a. Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed nec leo bibendum, sodales mauris ut, tincidunt massa. Other content blocks \u00b6 Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl, sit amet laoreet nibh. ``` var _extends = function(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { target[key] = source[key]; } } return target; }; ``` Praesent at return target , sodales nibh vel, tempor felis. Fusce vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices. Donec consectetur mauris non neque imperdiet, eget volutpat libero. Lists \u00b6 Unordered lists \u00b6 Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam ac, aliquet sed mauris. Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Ordered lists \u00b6 Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla consectetur feugiat sodales. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aliquam ornare feugiat quam et egestas. Nunc id erat et quam pellentesque lacinia eu vel odio. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Sed aliquet, neque at rutrum mollis, neque nisi tincidunt nibh. Pellentesque eget var _extends ornare tellus, ut gravida mi. ``` var _extends = function(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { target[key] = source[key]; } } return target; }; ``` \u200b Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Definition lists \u00b6 Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla.Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam ac, aliquet sed mauris. Code blocks \u00b6 Inline \u00b6 Morbi eget dapibus felis . Vivamus venenatis porttitor tortor sit amet rutrum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Pellentesque aliquet quam enim , eu volutpat urna rutrum a. Nam vehicula nunc return target mauris, a ultricies libero efficitur sed. Sed molestie imperdiet consectetur. Vivamus a pharetra leo. Pellentesque eget ornare tellus, ut gravida mi. Fusce vel lacinia lacus. Listing \u00b6 123456789 var _extends = function(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { target[key] = source[key]; } } return target;}; Horizontal rules \u00b6 Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla consectetur feugiat sodales. Data tables \u00b6 Sollicitudo / Pellentesi consectetur adipiscing elit arcu sed Vivamus a pharetra yes yes yes yes yes Ornare viverra ex yes yes yes yes yes Mauris a ullamcorper yes yes partial yes yes Nullam urna elit yes yes yes yes yes Malesuada eget finibus yes yes yes yes yes Ullamcorper yes yes yes yes yes Vestibulum sodales yes - yes - yes Pulvinar nisl yes yes yes - - Pharetra aliquet est yes yes yes yes yes Sed suscipit yes yes yes yes yes Orci non pretium yes partial - - - Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero. Left Center Right Lorem dolor amet ipsum sit Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl, sit amet laoreet nibh. Table with colgroups (Pandoc) Lorem ipsum dolor sit amet. Sed sagittis eleifend rutrum. Donec vitae suscipit est. For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Tugas 1"},{"location":"#tugas-1","text":"","title":"Tugas 1"},{"location":"#statistika-deskriptif","text":"Statistika Deskriptif adalah metode yang digunakan untuk menganalisis sebuah data sehingga dapat memberikan informasi yang dapat berguna. Contoh statistika deskriptif yakni tabel, grafik, diagram, piktogram. 1.Rata-rata (mean) Rata-rata adalah nilai yang menentukan pada kisaran angka berapa pada suatu data. Cara menghitung rata-rata yakni menjumlahkan seluruh nilai dari masing-masing data, kemudian dibagi dengan banyaknya data yang ada. 2.Median (median) Median adalah nilai tengah dari kumpulan data yang telah diurutkan dari yang terkecil sampai terbesar, apabila jumlah data adalah ganjil maka nilai median yakni suatu nilai yang berada di tengah urutan, namun apabila jumlah data genap maka mediannya adalah hasil penjumlahan dua nilai yang berada di tengah urutan data kemudian hasilnya dibagi dua. 3.Modus (mode) Nilai atau data yang paling sering muncul atau memiliki jumlah frekuensi yang paling banyak. Untuk data numerik unimodal yang cukup miring (asimetris), kami memiliki hubungan empiris: mean \u2212 mode \u2248 3 \u00d7 (mean \u2212 median) Ini menyiratkan bahwa mode untuk kurva frekuensi unimodal yang cukup miring dapat dengan mudah didekati jika nilai rata-rata dan median diketahui. 4.Standard Deviasi Adalah nilai statistika yang dimanfaatkan untuk menentukan bagaimana sebaran data dalam sampel yang merupakan akar kuadrat dari varians, serta seberapa dekat titik data individu ke rata-rata nilai sampel. Rumus yang digunakan: $$ \\begin{align }s = \\sqrt{\\frac{n\\sum_{i=1}nx_i2-(\\sum_{i=1}^nx_1)2}{n(n-1)}}\\end{align } $$ 5.Varian Varian adalah ukuran yang digunakan untuk mengetahui seberapa jauh sebuah kumpulan bilangan tersebar. 6.Skewness Suatu nilai yang menunjukkan seberapa jauh pergeseran dari bentuk simetris suatu distribusi atau sering disebut derajat ketidaksimetrisan. Untuk menghitung derajat distorisi dapat menggunakan koefisien Kemencengan Pearson yang diperoleh dengan menggunakan nilai selisih rata-rata dengan modus dibagi simpangan baku. 7.Quartil Adalah nilai-nilai yang membagi data yang sudah diurutkan ke dalam 4 bagian yang nilainya sama besar. Dalam menentukan letak kuartil data tunggal, kita harus melihat kondisi jumlah data (n) terlebih dahulu. Kuartil pada suatu data dapat diperoleh dengan cara membagi data tersebut secara terurut menjadi empat bagian yang memiliki nilai sama besar.","title":"Statistika Deskriptif\u00b6"},{"location":"#data-yang-sudah-diolah-berdasarkan-statistika-deskriptif","text":"import pandas as pd from scipy import stats import numpy as np import seaborn as sns import matplotlib as plt data = pd.read_csv(\"tugas gita.csv\",delimiter=\";\") cm = sns.light_palette(\"gold\", as_cmap=True) data.style.background_gradient(cmap=cm) colum = data.columns.tolist() for x in colum : ds = [x for x in data[x]] desc = data[x].describe() array = [x for x in desc] print(\"Detail kolom\",x) print(\"rata-rata: \",array[1]) print(\"Median: \",np.median(np.array(ds))) print(\"Modus: \",stats.mode(ds)) print(\"Standard deviasi: \",np.std(ds)) print(\"varian: \",stats.variation(ds)) print(\"Skewness: \",stats.skew(ds)) print(\"Quartil 1: \",array[4]) print(\"Quartil 2: \",array[5]) print(\"Quartil 3: \",array[6]) sns.distplot(data[x]) print(\"\\n\")","title":"Data yang sudah diolah berdasarkan Statistika Deskriptif\u00b6"},{"location":"#hasil-runningnya","text":"Detail kolom Data 1 rata-rata: 31.028 Median: 31.0 Modus: ModeResult(mode=array([10]), count=array([16])) Standard deviasi: 17.637097720430084 varian: 0.5684252198153308 Skewness: 0.04037865369912075 Quartil 1: 15.75 Quartil 2: 31.0 Quartil 3: 47.0 Detail kolom Data 2 rata-rata: 29.77 Median: 29.0 Modus: ModeResult(mode=array([31]), count=array([15])) Standard deviasi: 17.553492529978186 varian: 0.5896369677520386 Skewness: 0.08681623088885974 Quartil 1: 14.0 Quartil 2: 29.0 Quartil 3: 45.0 Detail kolom Data 3 rata-rata: 30.194 Median: 30.0 Modus: ModeResult(mode=array([7]), count=array([18])) Standard deviasi: 17.520740966066477 varian: 0.5802722715130979 Skewness: -0.009515290333714116 Quartil 1: 15.0 Quartil 2: 30.0 Quartil 3: 46.0 Detail kolom Data 4 rata-rata: 30.704 Median: 32.0 Modus: ModeResult(mode=array([52]), count=array([15])) Standard deviasi: 17.773924271246347 varian: 0.5788797639150061 Skewness: -0.03918001057467828 Quartil 1: 16.0 Quartil 2: 32.0 Quartil 3: 46.0","title":"Hasil runningnya:\u00b6"},{"location":"#mengukur-jarak-data","text":"","title":"Mengukur Jarak Data"},{"location":"#mengukur-jarak-data_1","text":"","title":"Mengukur Jarak Data\u00b6"},{"location":"#1-mengukur-jarak-atribut-numerik","text":"Saat ini database memiliki banyak tipe data, dimana mengukur jarak merupakan komponen utama dalam algoritma clustering berbasis jarak, seperti Algoritma Partisioning misalnya fuzzy c-mean, K-Mean, rough clustering, dan K-medoidm bergantung pada jarak untuk melakukan pengelompokkan. Dimisalkan terdapat dua vektor yang kita singkat dengan v1 dan v2. v1 = x1,x2,...,x_n, v2 = y1,y2,...,y_n, dimana x_i,y_i disebut atribut. Terdapat beberapa ukuran jarak atau biasa disebut similaritas, yakni diantaranya:","title":"1. Mengukur Jarak Atribut Numerik\u00b6"},{"location":"#minkowski-distance","text":"Minkowski Distance adalah sebuah metrik dalam ruang vektor dimana suatu norma didefinisikan (normed vector space) sekaligus dianggap sebagai generalisasi dari Euclidean distance dan Manhattan distance. Euclidean distance Euclidean distance merupakan metode perhitungan jarak yang digunakan untuk mengukur jarak dari dua buah titik dalam Euclidean space yakni meliputi bidang euclidean dua dimensi, tiga dimensi, atau bahkan lebih. Average Distance Average distance digunakan untuk menghitung jarak rata-rata antara data yang terletak pada cluster sama berdasarkan clustering dataset dan clustering dataset dengan penghapusan satu kolom (variabel). Berikut merupakan rumus dengan metode ini: dave=(1nn\u2211i=1(xi\u2212yi)2)12dave=(1n\u2211i=1n(xi\u2212yi)2)12 Keterangan: d = jarak antara x dan y x = data pusat klaster y = data pada atribut i = setiap data n = jumlah data, xi = data pada pusat klaster ke i yi = data pada setiap data ke i ###### Weighted euclidean distance Weighted Euclidean distance merupakan modifikisasi lain dari jarak Euclidean distance yang dapat digunakan. Rumus yang digunakan adalah sebagai berikut: dwe=(n\u2211i=1wi(xi\u2212yi)12)2dwe=(\u2211i=1nwi(xi\u2212yi)12)2 wi adalah bobot yang diberikan pada atribut ke-i ###### Chord distance Chord distance adalah salah satu ukuran jarak modifikasi Euclidean distance untuk mengatasi kekurangannya sehingga skala yang digunakan lebih baik dari Euclidean distance. Rumus yang digunakan yakni: dchord=(2\u22122\u2211ni=1xiyi||x||2||y||2)12dchord=(2\u22122\u2211i=1nxiyi||x||2||y||2)12 ###### Mahalanobis distance* Mahalanobis merupakan jarak yang teratur dapat digunakan untuk mengekstraksi hyperellipsoidal clusters, sehingga dapat mengurangi distorsi yang disebabkan oleh kolerasi linier antara fitur dengan cara transformasi pemutihan ke data atau menggunakan kuadrat jarak mahalanobis. Rumus yang digunakan yaitu: dmah=\u221a(x\u2212y)S\u22121(x\u2212y)Tdmah=(x\u2212y)S\u22121(x\u2212y)T Ket : S adalah matrik covariance data ###### Cosine measure Cosine similarity adalah sebuah metode untuk menghitung kesamaan antara dua buah objek yang dinyatakan dalam dua buah vector dengan menggunakan kata kunci dari sebuah dokumen sebagai ukuran. Ukuran dari cosine similarity ini lebih banyak digunakan dalam similaritas dokumen. Rumus yang digunakan adalah: Cosine(x,y)=\u2211ni=1xiyi||x||2||y||2Cosine(x,y)=\u2211i=1nxiyi||x||2||y||2 Ket : \u2225y\u22252 merupakan Euclidean norm dari vektor y=(y1,y2,\u2026,yn)y=(y1,y2,\u2026,yn) didefinisikan dengan \u2225y\u22252=\u221ay21+y22+\u2026+y2n ###### Pearson correlation Kolerasi Pearson adalah ukuran kolerasi yang digunakan untuk mengukur kekuatan dan arah hubungan linier dari dua variabel. Dikatakan berkolerasi apabila terjadi perubahan salah satu variabel disertai dengan perubahan variabel lainnya, baik dalam arah yang sama ataupun arah yang sebaliknya. Pearson correlation banyak digunakan dalam data expresi gen. Dimana ukuran ini menghitung similaritas antara dua bentuk pola expresi gen. Akan tetapi metode ini memiliki kelemahan yaitu sensitif terhadap outlier. Rumus yang digunakan yakni: Pearson(x,y)=\u2211ni=1(xi\u2212\u03bcx)(yi\u2212\u03bcy)\u221a\u2211ni=1(xi\u2212yi)2\u221a\u2211ni=1(xi\u2212yi)2Pearson(x,y)=\u2211i=1n(xi\u2212\u03bcx)(yi\u2212\u03bcy)\u2211i=1n(xi\u2212yi)2\u2211i=1n(xi\u2212yi)2","title":"Minkowski Distance\u00b6"},{"location":"#2-mengukur-jarak-atribut-binary","text":"Atribut biner hanya memiliki dua kategori atau keadaan yakni 0 dan 1, dimana 0 berarti tidak ada dan 1 berarti ada. Atribut biner bisa simetris atau asimetris, dikatakan simetris jika kedua nilainya bernilai sama atau setimbang harganya, sehingga tidak bisa diberi kode 0 atau 1, sedangkan asimetris kedua nilainya tidak setimbang harganya sehingga dapat diberi kode 0 atau 1. Contoh atribut biner yaitu status kehidupan, yakni hidup dan meninggal. 1 menunjukkan orang itu hidup dan 0 menunjukkan orang itu meninggal. Atribut biner tidak boleh diperlakukan sama dengan atribut numerik, sehingga ada metode khusus untuk membedakan komputasi pada data biner. Jadi untuk menghitung ketidaksamaan antara dua atribut biner yakni dengan melibatkan penghitungan matriks ketidaksamaan dari data biner. Jika semua atribut biner dianggap memiliki bobot yang sama, kita memiliki tabel kontingensi 2\u00d72 di mana q adalah jumlah atribut yang sama dengan 1 untuk kedua objek i dan j, r adalah jumlah atribut yang sama dengan 1 untuk objek i tetapi 0 untuk objek j, s adalah jumlah atribut yang sama dengan 0 untuk objek i tetapi 1 untuk objek j, dan t adalah jumlah atribut yang sama dengan 0 untuk kedua objek ii dan j. Jumlah total atribut adalah p, dimana p=q+r+s+tp=q+r+s+t Untuk atribut biner simetris, masing-masing nilai bobot yang sama. Jika objek i dan j dinyatakan sebagai atribut biner simetris, maka dissimilarity antara i dan j adalah d(i,j)=r+sq+r+s+td(i,j)=r+sq+r+s+t Untuk atribut biner asimetris, kedua kondisi tersebut tidak sama pentingnya, seperti hasil positif 1 dan negatif 0 dari tes penyakit. Dimana 1 (positif) dianggap lebih signifikan, sehingga kecocokan 0 negatif diabaikan. Atribut biner ini disebut asimetris biner dissimilarity, rumusnya yakni: d(i,j)=r+sq+r+sd(i,j)=r+sq+r+s Untuk pengukuran dua atribut biner berdasarkan pada disimilarity. Misalnya, biner asimetris kesamaan antara objek i dan j, dihitung dengan rumus: sim(i,j)=qq+r+s=1\u2212d(i,j)sim(i,j)=qq+r+s=1\u2212d(i,j)","title":"2. MENGUKUR JARAK ATRIBUT BINARY\u00b6"},{"location":"#3-mengukur-jarak-atribut-categorical","text":"","title":"3. MENGUKUR JARAK ATRIBUT CATEGORICAL\u00b6"},{"location":"#overlay-metric","text":"Apabila semua atribut adalah bertipe nominal, ukuran jarak yang paling sederhana adalah dengan Overlay Metric, rumusnya yaitu: d(x,y)=n\u2211i=1\u03b4(ai(x),ai(y))d(x,y)=\u2211i=1n\u03b4(ai(x),ai(y)) Keterangan: n = banyaknya atribut ai(x) dan ai(y) = nilai atribut ke i Jika hasilnya = 0 maka ai(x)=ai(y), dan 1 jika sebaliknya","title":"Overlay Metric\u00b6"},{"location":"#value-difference-metric-vdm","text":"VDM dikenalkan oleh Standfill and Waltz, rumusnya yaitu: d(x,y)=n\u2211i=1C\u2211c=1|P(c|ai(x))\u2212P(c|ai(y)d(x,y)=\u2211i=1n\u2211c=1C|P(c|ai(x))\u2212P(c|ai(y) Keterangan : C = banyaknya kelas P(c|ai(x))P(c|ai(x)) adalah probabilitas bersyarat dimana kelas x adalah c dari atribut Ai yang memiliki nilai ai(x) P(c|ai(y))P(c|ai(y)) adalah probabilitas bersyarat dimana kelas y adalah c dengan atribut Ai memiliki nilai ai(y) Pendekatan lain berbasi probabilitas adalah SFM (Short and Fukunaga Metric) yang kemudian dikembangkan oleh Myles dan Hand dan didefinisikan dengan d(x,y)=C\u2211c=1|P(c|x)\u2212P(c|y)|d(x,y)=\u2211c=1C|P(c|x)\u2212P(c|y)|","title":"Value Difference Metric (VDM)\u00b6"},{"location":"#minimum-risk-metric-mrm","text":"Ukuran ini dipresentasikan oleh Blanzieri and Ricci, dimana MRM meminimumkan risk of misclassification yang didefinisikan dengan d(x,y)=C\u2211c=1P(c|x)(1\u2212P(c|y))d(x,y)=\u2211c=1CP(c|x)(1\u2212P(c|y))","title":"Minimum Risk Metric (MRM)\u00b6"},{"location":"#4-mengukur-jarak-atribut-ordinal","text":"Atribut Ordinal adalah atribut dengan nilai-nilai yang memiliki urutan atau peringkat, akan tetapi jarak antara nilai-nilainya tidak diketahui. Contohnya: nilai ujian(A,B,C,D,E), rangking kelas(1,2,3), ukuran baju(S,M,L,XL,XXL), dan sebagainya. Perlakuan untuk atribut ordinal adalah cukup sama dengan atribut numerik ketika menghitung disimilarity antara objek. Misalkan f adalah atribut-atribut dari atribut ordinal dari n objek. Menghitung disimilarity terhadap f fitur sebagai berikut: Nilai f untuk objek ke-ii adalah xif, dan f memiliki Mf status urutan , mewakili peringkat 1,..,Mf1,..,Mf Ganti setiap xif dengan peringkatnya, rif\u2208{1...Mf} Karena setiap atribut ordinal dapat memiliki jumlah state yang berbeda, diperlukan untuk memetakan rentang setiap atribut ke [0,0, 1.0] sehingga setiap atribut memiliki bobot yang sama. Perl melakukan normalisasi data dengan mengganti peringkat rifrif dengan: zif=rif\u22121Mf\u22121zif=rif\u22121Mf\u22121 Dissimilarity kemudian dihitung dengan menggunakan ukuran jarak seperti atribut numerik dengan data yang baru setelah ditransformasi $ z _ { i f }$","title":"4. MENGUKUR JARAK ATRIBUT ORDINAL\u00b6"},{"location":"#5-menghitung-jarak-tipe-campuran","text":"","title":"5. MENGHITUNG JARAK TIPE CAMPURAN\u00b6"},{"location":"#code-program-untuk-implementasikan","text":"import pandas as pd from scipy import stats import numpy as np import seaborn as sns import matplotlib.pyplot as plt data = pd.read_csv(\"Data.csv\",delimiter=\";\") k=data.iloc[0:18] k Hasil outputnya : Sex Length Diameter Height Whole weight Shucked weight Viscera weight Shell weight Rings 0 M 0.455 0.365 0.095 0.5160 0.2245 0.1010 0.150 15 1 M 0.350 0.265 0.090 0.2255 0.0995 0.0485 0.070 7 2 F 0.530 0.420 0.135 0.6770 0.2565 0.1415 0.210 9 3 M 0.440 0.365 0.125 0.5160 0.2155 0.1140 0.155 10 4 I 0.330 0.255 0.080 0.2050 0.0895 0.0395 0.055 7 5 I 0.425 0.300 0.095 0.3515 0.1410 0.0775 0.120 8 6 F 0.530 0.415 0.150 0.7775 0.2370 0.1415 0.330 20 7 F 0.545 0.425 0.125 0.7680 0.2940 0.1495 0.260 16 8 M 0.475 0.370 0.125 0.5095 0.2165 0.1125 0.165 9 9 F 0.550 0.440 0.150 0.8945 0.3145 0.1510 0.320 19 10 F 0.525 0.380 0.140 0.6065 0.1940 0.1475 0.210 14 11 M 0.430 0.350 0.110 0.4060 0.1675 0.0810 0.135 10 12 M 0.490 0.380 0.135 0.5415 0.2175 0.0950 0.190 11 13 F 0.535 0.405 0.145 0.6845 0.2725 0.1710 0.205 10 14 F 0.470 0.355 0.100 0.4755 0.1675 0.0805 0.185 10 15 M 0.500 0.400 0.130 0.6645 0.2580 0.1330 0.240 12 16 I 0.355 0.280 0.085 0.2905 0.0950 0.0395 0.115 7 17 F 0.440 0.340 0.100 0.4510 0.1880 0.0870 0.130 10 numerical=[8] ordinal=[1,7] from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[0]+[0]+[0]+[0], [\"v1-v3\"]+[0]+[0]+[0]+[0]+[0], [\"v2-v3\"]+[0]+[0]+[0]+[0]+[0], [\"v3-v4\"]+[0]+[0]+[0]+[0]+[0], [\"v4-v5\"]+[0]+[0]+[0]+[0]+[0], [\"v5-v6\"]+[0]+[0]+[0]+[0]+[0] ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Hasil outputnya : Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 0 0 0 0 v1-v3 0 0 0 0 0 v2-v3 0 0 0 0 0 v3-v4 0 0 0 0 0 v4-v5 0 0 0 0 0 v5-v6 0 0 0 0 0","title":"*Code Program untuk Implementasikan\u00b6"},{"location":"#jarak-numerik","text":"def chordDist(v1,v2,jnis): jmlh=0 normv1=0 normv2=0 for x in range (len(jnis)): normv1=normv1+(int(k.values.tolist()[v1][jnis[x]])**2) normv2=normv2+(int(k.values.tolist()[v1][jnis[x]])**2) jmlh=jmlh+(int(k.values.tolist()[v1][jnis[x]])*int(k.values.tolist()[v2][jnis[x]])) return ((2-(2*jmlh/((normv1**0.5)*(normv2**0.5)))**0.5)) from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[\"{:.2f}\".format(chordDist(0,1,numerical))]+[0]+[0]+[0], [\"v1-v3\"]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[0]+[0]+[0], [\"v2-v3\"]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[0]+[0]+[0], [\"v3-v4\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[0]+[0]+[0], [\"v4-v5\"]+[0]+[\"{:.2f}\".format(chordDist(3,4,numerical))]+[0]+[0]+[0], [\"v5-v6\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[0]+[0]+[0], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Hasil outputnya : Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 1.03 0 0 0 v1-v3 0 0.90 0 0 0 v2-v3 0 0.40 0 0 0 v3-v4 0 0.51 0 0 0 v4-v5 0 0.82 0 0 0 v5-v6 0 0.51 0 0 0","title":"#JARAK NUMERIK\u00b6"},{"location":"#specimen","text":"","title":"Specimen\u00b6"},{"location":"#body-copy","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras arcu libero, mollis sed massa vel, ornare viverra ex . Mauris a ullamcorper lacus. Nullam urna elit, malesuada eget finibus ut, ullamcorper ac tortor. Vestibulum sodales pulvinar nisl, pharetra aliquet est. Quisque volutpat erat ac nisi accumsan tempor. Sed suscipit , orci non pretium pretium, quam mi gravida metus, vel venenatis justo est condimentum diam. Maecenas non ornare justo. Nam a ipsum eros. Nulla aliquam orci sit amet nisl posuere malesuada. Proin aliquet nulla velit, quis ultricies orci feugiat et. Ut tincidunt sollicitudin tincidunt. Aenean ullamcorper sit amet nulla at interdum.","title":"Body copy\u00b6"},{"location":"#headings","text":"","title":"Headings\u00b6"},{"location":"#the-3rd-level","text":"","title":"The 3rd level\u00b6"},{"location":"#the-4th-level","text":"","title":"The 4th level\u00b6"},{"location":"#the-5th-level","text":"","title":"THE 5TH LEVEL\u00b6"},{"location":"#the-6th-level","text":"","title":"The 6th level\u00b6"},{"location":"#headings-with-secondary-text","text":"","title":"Headings with secondary text\u00b6"},{"location":"#the-3rd-level-with-secondary-text","text":"","title":"The 3rd level with secondary text\u00b6"},{"location":"#the-4th-level-with-secondary-text","text":"","title":"The 4th level with secondary text\u00b6"},{"location":"#the-5th-level-with-secondary-text","text":"","title":"THE 5TH LEVEL WITH SECONDARY TEXT\u00b6"},{"location":"#the-6th-level-with-secondary-text","text":"","title":"The 6th level with secondary text\u00b6"},{"location":"#blockquotes","text":"Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Sed molestie imperdiet consectetur.","title":"Blockquotes\u00b6"},{"location":"#blockquote-nesting","text":"Sed aliquet , neque at rutrum mollis, neque nisi tincidunt nibh, vitae faucibus lacus nunc at lacus. Nunc scelerisque, quam id cursus sodales, lorem libero fermentum urna, ut efficitur elit ligula et nunc. Mauris dictum mi lacus, sit amet pellentesque urna vehicula fringilla. Ut sit amet placerat ante. Proin sed elementum nulla. Nunc vitae sem odio. Suspendisse ac eros arcu. Vivamus orci erat, volutpat a tempor et, rutrum. eu odio. Suspendisse rutrum facilisis risus , eu posuere neque commodo a. Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed nec leo bibendum, sodales mauris ut, tincidunt massa.","title":"Blockquote nesting\u00b6"},{"location":"#other-content-blocks","text":"Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl, sit amet laoreet nibh. ``` var _extends = function(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { target[key] = source[key]; } } return target; }; ``` Praesent at return target , sodales nibh vel, tempor felis. Fusce vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices. Donec consectetur mauris non neque imperdiet, eget volutpat libero.","title":"Other content blocks\u00b6"},{"location":"#lists","text":"","title":"Lists\u00b6"},{"location":"#unordered-lists","text":"Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam ac, aliquet sed mauris. Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam.","title":"Unordered lists\u00b6"},{"location":"#ordered-lists","text":"Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla consectetur feugiat sodales. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aliquam ornare feugiat quam et egestas. Nunc id erat et quam pellentesque lacinia eu vel odio. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Sed aliquet, neque at rutrum mollis, neque nisi tincidunt nibh. Pellentesque eget var _extends ornare tellus, ut gravida mi. ``` var _extends = function(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { target[key] = source[key]; } } return target; }; ``` \u200b Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo.","title":"Ordered lists\u00b6"},{"location":"#definition-lists","text":"Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla.Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam ac, aliquet sed mauris.","title":"Definition lists\u00b6"},{"location":"#code-blocks","text":"","title":"Code blocks\u00b6"},{"location":"#inline","text":"Morbi eget dapibus felis . Vivamus venenatis porttitor tortor sit amet rutrum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Pellentesque aliquet quam enim , eu volutpat urna rutrum a. Nam vehicula nunc return target mauris, a ultricies libero efficitur sed. Sed molestie imperdiet consectetur. Vivamus a pharetra leo. Pellentesque eget ornare tellus, ut gravida mi. Fusce vel lacinia lacus.","title":"Inline\u00b6"},{"location":"#listing","text":"123456789 var _extends = function(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { target[key] = source[key]; } } return target;};","title":"Listing\u00b6"},{"location":"#horizontal-rules","text":"Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla consectetur feugiat sodales.","title":"Horizontal rules\u00b6"},{"location":"#data-tables","text":"Sollicitudo / Pellentesi consectetur adipiscing elit arcu sed Vivamus a pharetra yes yes yes yes yes Ornare viverra ex yes yes yes yes yes Mauris a ullamcorper yes yes partial yes yes Nullam urna elit yes yes yes yes yes Malesuada eget finibus yes yes yes yes yes Ullamcorper yes yes yes yes yes Vestibulum sodales yes - yes - yes Pulvinar nisl yes yes yes - - Pharetra aliquet est yes yes yes yes yes Sed suscipit yes yes yes yes yes Orci non pretium yes partial - - - Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero. Left Center Right Lorem dolor amet ipsum sit Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl, sit amet laoreet nibh. Table with colgroups (Pandoc) Lorem ipsum dolor sit amet. Sed sagittis eleifend rutrum. Donec vitae suscipit est. For full documentation visit mkdocs.org .","title":"Data tables\u00b6"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"}]}